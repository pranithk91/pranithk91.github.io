from flask import Flask, render_template, request, redirect, url_for, flash, session
from flask_mysqldb import MySQL
from flask_sqlalchemy import SQLAlchemy
from werkzeug.security import generate_password_hash, check_password_hash
from functools import wraps
import mysql.connector

app = Flask(__name__)

app.config['SECRET_KEY'] = 'very_long_and_random_string'
app.config['MYSQL_HOST'] = '193.203.184.152'
app.config['MYSQL_USER'] = 'u885517842_AdminUser'
app.config['MYSQL_PASSWORD'] = 'MdP@ssword!!1'
app.config['MYSQL_DB'] = 'u885517842_MedicalStore'
#app.config['SQLALCHEMY_DATABASE_URI'] = 'mariadb+mysqlconnector://u885517842_AdminUser:MdP@ssword!!1@193.203.184.152/u885517842_MedicalStore'
#                                        'mysql+pymysql://admin:password@192.192.192.192:3306/database_name'



#app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password = db.Column(db.String(120), nullable=False)

class MedicineList2(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), unique=True, nullable=False)
    type = db.Column(db.String(50))
    company = db.Column(db.String(100))
    MRP = db.Column(db.Float)
    PTR = db.Column(db.Float)
    GST = db.Column(db.Float)
    HSN = db.Column(db.String(20))
    offer1 = db.Column(db.String(100))
    offer2 = db.Column(db.String(100))
    weight = db.Column(db.Float)

def login_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            return redirect(url_for('login'))
        return f(*args, **kwargs)
    return decorated_function

@app.route('/')
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user = User.query.filter_by(username=username).first()
        if user and check_password_hash(user.password, password):
            session['user_id'] = user.id
            return redirect(url_for('medicine_form'))
        flash('Invalid username or password')
    return render_template('login.html')

@app.route('/logout')
def logout():
    session.pop('user_id', None)
    return redirect(url_for('login'))

@app.route('/medicine_form', methods=['GET', 'POST'])
@login_required
def medicine_form():
    if request.method == 'POST':
        name = request.form['name']
        existing_medicine = MedicineList2.query.filter_by(name=name).first()
        if existing_medicine:
            flash('Medicine with this name already exists')
        else:
            new_medicine = MedicineList2(
                name=name,
                type=request.form['type'],
                company=request.form['company'],
                MRP=float(request.form['MRP']),
                PTR=float(request.form['PTR']),
                GST=float(request.form['GST']),
                HSN=request.form['HSN'],
                offer1=request.form['offer1'],
                offer2=request.form['offer2'],
                weight=float(request.form['weight'])
            )
            db.session.add(new_medicine)
            db.session.commit()
            flash('Medicine added successfully')
    return render_template('medicine_form.html')

if __name__ == '__main__':
    with app.app_context():
        db.create_all()
    app.run(debug=True)
